// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChatbotNotifyStack Snapshot 1`] = `
{
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Slack Configuration",
          },
          "Parameters": [
            "SlackWorkspaceId",
            "SlackChannelId",
          ],
        },
      ],
      "ParameterLabels": {
        "SlackChannelId": {
          "default": "Slack Channel ID",
        },
        "SlackWorkspaceId": {
          "default": "Slack Workspace ID",
        },
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SlackChannelId": {
      "Description": "Slack Channel ID",
      "Type": "String",
    },
    "SlackWorkspaceId": {
      "Description": "Slack Workspace ID",
      "Type": "String",
    },
  },
  "Resources": {
    "ChatbotErrorRuleF0295058": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "status-details": {
              "detailed-status": [
                "INOPERABLE",
                "CANCELLED",
                "FAILED",
                "FAILED_IMPORT",
                "SKIPPED_SUSPENDED_ACCOUNT",
              ],
            },
          },
          "detail-type": [
            "CloudFormation StackSet StackInstance Status Change",
          ],
          "source": [
            "aws.cloudformation",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "ChatbotErrorTopicF26444E6",
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "account": "$.account",
                "detail-stack-set-arn": "$.detail.stack-set-arn",
                "detail-status-details-detailed-status": "$.detail.status-details.detailed-status",
                "detail-status-details-status": "$.detail.status-details.status",
                "detail-status-details-status-reason": "$.detail.status-details.status-reason",
                "region": "$.region",
              },
              "InputTemplate": "{"version":"1.0","source":"custom","content":{"textType":"client-markdown","title":":warning: CloudFormation StackSet StackInstance Status Change | <region> | Account: <account>","description":"アカウントID: <account>\\nリージョン: <region>\\n\\nスタックセットARN: <detail-stack-set-arn>\\n\\nステータス: <detail-status-details-status>\\nステータス詳細: <detail-status-details-detailed-status>\\nステータス理由: <detail-status-details-status-reason>"}}",
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ChatbotErrorSlackChannel461DCF21": {
      "Properties": {
        "ConfigurationName": "chatbot-error-notifications",
        "IamRoleArn": {
          "Fn::GetAtt": [
            "ChatbotErrorSlackChannelConfigurationRole0D1A29D8",
            "Arn",
          ],
        },
        "LoggingLevel": "ERROR",
        "SlackChannelId": {
          "Ref": "SlackChannelId",
        },
        "SlackWorkspaceId": {
          "Ref": "SlackWorkspaceId",
        },
        "SnsTopicArns": [
          {
            "Ref": "ChatbotErrorTopicF26444E6",
          },
        ],
      },
      "Type": "AWS::Chatbot::SlackChannelConfiguration",
    },
    "ChatbotErrorSlackChannelConfigurationRole0D1A29D8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "chatbot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ChatbotErrorTopicF26444E6": {
      "Properties": {
        "TopicName": "ChatbotErrorNotifications",
      },
      "Type": "AWS::SNS::Topic",
    },
    "ChatbotErrorTopicPolicy0A68C558": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Ref": "ChatbotErrorTopicF26444E6",
              },
              "Sid": "0",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "ChatbotErrorTopicF26444E6",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`WebhookNotifyStack Snapshot 1`] = `
{
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Slack Configuration",
          },
          "Parameters": [
            "SlackWebhookUrl",
          ],
        },
      ],
      "ParameterLabels": {
        "SlackWebhookUrl": {
          "default": "Slack Webhook URL",
        },
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SlackWebhookUrl": {
      "Description": "Slack Webhook URL",
      "Type": "String",
    },
  },
  "Resources": {
    "SlackNotifierLambda0EBEA281": {
      "DependsOn": [
        "SlackNotifierLambdaServiceRoleDefaultPolicy9623029E",
        "SlackNotifierLambdaServiceRoleBF51634B",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "
import boto3
import os
import json
import urllib.request
from logging import getLogger, INFO

logger = getLogger()
logger.setLevel(INFO)

organizations = boto3.client("organizations")

SLACK_WEBHOOK_URL = os.environ['SLACK_WEBHOOK_URL']

def get_account_name(account_id):
    resp = organizations.describe_account(AccountId=account_id)
    return resp['Account']['Name']

def lambda_handler(event, context):
    # メッセージ作成に必要なパラメータの取得
    detail_type = event['detail-type']
    stack_set_arn = event['detail'].get('stack-set-arn')
    stack_set_name = stack_set_arn.split('/')[1].split(':')[0]
    stack_id = event['detail'].get('stack-id')
    region = stack_id.split(':')[3]
    account_id = stack_id.split(':')[4]
    account_name = get_account_name(account_id)
    status = event['detail']['status-details'].get('status')
    detailed_status = event['detail']['status-details'].get('detailed-status')
    status_reason = event['detail']['status-details'].get('status-reason')

    # メッセージ作成
    title = f":warning: *{detail_type} | {region} | Account: {account_id}*"
    message = ( f'{title}
'
                f'アカウント: {account_name} ({account_id})
'
                f'リージョン: {region}

'
                f'スタックセット名: {stack_set_name}
'
                f'スタックセットARN: {stack_set_arn}

'
                f'ステータス: {status}
'
                f'ステータス詳細: {detailed_status}
'
                f'ステータス理由: {status_reason}')

    # Slack通知
    slack_message = {
        'text': message
    }

    data = json.dumps(slack_message).encode('utf-8')
    req = urllib.request.Request(SLACK_WEBHOOK_URL, data=data, headers={'Content-Type': 'application/json'})
    try:
        response = urllib.request.urlopen(req)
        response_body = response.read()
        logger.info(f'Slack notification sent successfully: {response_body}')
    except urllib.error.HTTPError as e:
        logger.error(f'Failed to send Slack notification: {e.reason}')
        raise

    return {
        'statusCode': 200,
        'body': json.dumps('Slack notification sent successfully')
}
      ",
        },
        "Environment": {
          "Variables": {
            "SLACK_WEBHOOK_URL": {
              "Ref": "SlackWebhookUrl",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "SlackNotifierLambdaServiceRoleBF51634B",
            "Arn",
          ],
        },
        "Runtime": "python3.12",
      },
      "Type": "AWS::Lambda::Function",
    },
    "SlackNotifierLambdaServiceRoleBF51634B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SlackNotifierLambdaServiceRoleDefaultPolicy9623029E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "organizations:DescribeAccount",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SlackNotifierLambdaServiceRoleDefaultPolicy9623029E",
        "Roles": [
          {
            "Ref": "SlackNotifierLambdaServiceRoleBF51634B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StackSetsErrorRuleAllowEventRuleWebhookNotifyStackSlackNotifierLambdaD780FA364FFD0DEE": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SlackNotifierLambda0EBEA281",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "StackSetsErrorRuleFBA6F6EB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "StackSetsErrorRuleFBA6F6EB": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "status-details": {
              "detailed-status": [
                "INOPERABLE",
                "CANCELLED",
                "FAILED",
                "FAILED_IMPORT",
                "SKIPPED_SUSPENDED_ACCOUNT",
              ],
            },
          },
          "detail-type": [
            "CloudFormation StackSet StackInstance Status Change",
          ],
          "source": [
            "aws.cloudformation",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SlackNotifierLambda0EBEA281",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
